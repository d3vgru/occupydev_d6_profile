<?php

/**
 * @file
 * Prowl Messsaging using Prowl module. Messaging method plug-in
 */

/**
 * Implementation of hook_messaging
 */
function messaging_prowl_messaging($op = 'info') {
  switch($op) {
    case 'send methods':
      $info['prowl'] = array(
        'title' => 'Prowl Push Notifications',
        'name' => t('Prowl'),
        'group' => 'prowl', // Class of send method
        'type' => MESSAGING_TYPE_SEND,
        'glue' => ' ',
        'address_type' => 'prowl', // Which kind of address this method uses
        'description' => t('Send notification using <a href="http://prowl.weks.net/">Prowl</a>.'),
        'render callback' => 'messaging_prowl_render',
        'send callback' => 'messaging_prowl_send_msg',
      );
      return $info;
    case 'address types':
      $types = array();
      $types['prowl'] = array(
        'name' => t('Prowl API key'),
        'user2address callback' => 'messaging_prowl_user_destination',
      );
      return $types;
  }
}

/**
 * Message Render callback
 */
function messaging_prowl_render($message, $info) {
  // We need to apply filtering first or run through the render function
  $message = Messaging_Send_Method::default_render($message, $info);
  // Now we do some clean up in the body that may contain new lines, replace them with spaces
  if ($message->body) {
    $message->body = messaging_text_clean($message->body, ' ');
  }
  return $message;
}

/**
 * Map user account to Prowl destination (Prowl API key)
 */
function messaging_prowl_user_destination($account) {
  $account = messaging_user_object($account);
  // Check for active prowl API key. Simply return it so that the send
  // callback has a destination array and access everything.
  if (ctype_alnum($account->prowl_api_key) && (strlen($account->prowl_api_key) == 40)) {
    return $account->prowl_api_key;
  }
}

/**
 * Send Prowl notification
 *
 * This is just a wrapper for prowl_send_any_user_notification()
 *
 * @param $destination
 *   Prowl API key
 */
function messaging_prowl_send_msg($destination, $message, $params = array()) {
  return prowl_send_any_user_notification($destination, $message->get_body(), $message->get_subject());
}

/**
 * Implementation of hook_disable()
 */
function messaging_prowl_disable() {
  messaging_method_disable('prowl');
}
